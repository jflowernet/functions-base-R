---
title: "Functions and base R"
author: "Jason Flower"
format: html
---

Creating functions using dplyr and other tidyverse packages can be tricky due to non-standard evalution, scoping and other issues detailed [here](https://dplyr.tidyverse.org/articles/programming.html). So how about I just use base R?

Useful resources:

- [dplyr <-> base](https://cran.r-project.org/web/packages/dplyr/vignettes/base.html) vignette in the `dplyr` package.

## Subsetting

`dplyr::filter()` equivalent in base is `subset()` or `df[`. I think `subset()` is more readable, but unfortunately doesn't play nice when placed into a function (see [here](https://stackoverflow.com/questions/9860090/why-is-better-than-subset)). So to do subsetting in function:

```{r}
subset_func <- function(df, value) df[which(df$c == value), ] 

#without the which() we get NA rows
subset_func_still_NAs <- function(df, value) df[df$c == value, ]

df <- data.frame(a = 1:3, b = 4:6, c = c(1, NA, 2))

subset_func(df, 1)

subset_func_still_NAs(df, 1)


```

